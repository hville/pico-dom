var jsdom = require('jsdom').jsdom,
		ct = require('cotest'),
		P = require('../dist/index.js')

var defaultView = P.setDefaultView(jsdom().defaultView)

var el = P.createElement

ct('el-svg', function() {
	var elm = el.svg('svg')
	ct('===', elm.nodeName.toLowerCase(), 'svg')
	ct('!!', elm instanceof defaultView.Node)
})
ct('el-svg attributes', function() {
	var elm = el.svg('svg', el.svg('path[d=mypath]'))
	ct('===', elm.nodeName.toLowerCase(), 'svg')
	ct('!!', elm instanceof defaultView.Node)
	ct('===', elm.childNodes.length, 1)
	ct('===', elm.firstChild instanceof defaultView.Node, true)
})
ct('el-svg style attributes', function() {
	var elm = el.svg('svg[style="display: none;"]')
	ct('===', elm.hasAttribute('style'), true)
	ct('===', elm.getAttribute('style'), 'display: none;')
})
ct('el-html falsy children', function() {
	var elm0 = el('div', '', 0, null, [undefined, 0])
	ct('===', elm0.childNodes.length, 3)
	ct('===', elm0.childNodes[1].textContent, '0')
	var elm1 = el('div', '', null, [undefined])
	ct('===', elm1.childNodes.length, 1)
	ct('===', elm1.textContent, '')
})
ct('el-mixed nested namespace', function() {
	var elm = el('div', el.svg('svg'), el('p', 'text'))
	ct('===', elm.childNodes.length, 2)
	ct('===', elm.children.length, 2)
})
ct('el-element namespace', function() {
	var el0 = el.svg('circle'),
			el1 = el('svg:circle'),
			el2 = el('circle[xmlns="http://www.w3.org/2000/svg"]')
	ct('===', el0.namespaceURI, 'http://www.w3.org/2000/svg')
	ct('===', el1.namespaceURI, 'http://www.w3.org/2000/svg')
	ct('===', el2.namespaceURI, 'http://www.w3.org/2000/svg')
})
ct('el-styles', function() { //font-weight: bold; color: red; font-size:150%;
	var el0 = el.svg('circle[style=font-size:150%;color:blue;]'),
			el1 = el('svg:circle[style=font-size:150%;color:blue]'),
			el2 = el.svg('circle', {attrs: {style: 'font-size:150%; color:blue'}}),
			el3 = el('div', {attrs: {style: 'font-size:150%; color:blue'}})
	ct('===', el0.getAttribute('style').replace(/\s/g, ''), 'font-size:150%;color:blue;')
	ct('===', el1.getAttribute('style').replace(/\s/g, ''), 'font-size:150%;color:blue')
	ct('===', el2.getAttribute('style').replace(/\s/g, ''), 'font-size:150%;color:blue')
	ct('===', el3.getAttribute('style').replace(/\s/g, ''), 'font-size:150%;color:blue')
})
ct.skip('el-attribute namespace, ie: xmlns:xlink', function() {
	var el0 = el.svg('circle[xmlns:xlink="http://www.w3.org/1999/xlink"]'),
			el1 = el.svg('circle[xmlns:xlink="http://www.w3.org/1999/xlink"]'),
			el2 = el('circle', {attrs: {'xmlns:xlink':'http://www.w3.org/2000/svg'}})
	ct('===', el0.hasAttributeNS('xmlns','xlink'), true)
	ct('===', el1.hasAttributeNS('xmlns','xlink'), true)
	ct('===', el2.hasAttributeNS('xmlns','xlink'), true)
})
